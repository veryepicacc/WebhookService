--[[
	Discord rate limits: 30 REQUESTS PER 60 SECONDS!!!
	If the rate limits are not respected, there is a chance your discord account can get terminated for overrequesting.
	If you break the rate limits for discord, there is a chance you could ruin it for everyone!
	If terminated, it's not my fault.
	Have fun.
--]]

local WebhookService = {}

local ServerStorage : ServerStorage = game:GetService("ServerStorage")
local HttpService : HttpService = game:GetService("HttpService")
local CurrentRequestDebounce : string = false


--[[
	Webhook link (string) is put in through the Webhook : Setup function.
	If you use different webhook link from the one you had previously put in, you may have to change it.
--]]
local WebhookLink : string = "https://discord.com/api/" --The default ("https://discord.com/api/") you see here is just a placeholder for when you add the webhook link.

function WebhookService : Setup(webhook)
	WebhookLink = webhook
end

function WebhookService : GetWebhookInfo()
	local Info = {WebhookLink}
	return Info
end

--[[
	The PostWebhookFunc is the function that should have the debounce / cooldown to avoid discord request breaking.
	Like said before, safeguard this function so that it doesn't overflow the discord rate limits.
	I have added a sample debounce for you to make your own systems.
--]]
function WebhookService : PostWebhookFunc(postContent, postType, embedData, embedTitle)
	local Information = WebhookService : GetWebhookInfo()

	if Information[1] ~= "https://discord.com/api/" or "https://discordapp.com/api/" then
		if tostring(postType) == "Text" then
			if CurrentRequestDebounce == false then
				local PostTableData = {
					["content"] = tostring(postContent),
				}

				PostTableData = HttpService:JSONEncode(PostTableData)
				local success, err = pcall(function()
					return HttpService:PostAsync(tostring(WebhookLink), PostTableData)
				end)

				if not success then
					--The warn is for the sake of helping you figure out the error in the PostAsync request.
					warn("WebhookService Post Attempt failed. " .. err)
				else
					CurrentRequestDebounce = true
					task.delay(5, function()
						CurrentRequestDebounce = false
					end)
				end
			else
				return "Post request limit has been reached, try again in a bit. Message: " .. tostring(postContent)
			end
		elseif tostring(postType) == "Embed" then
			if CurrentRequestDebounce == false then
				local PostTableData = embedData

				PostTableData = HttpService:JSONEncode(PostTableData)
				local success, err = pcall(function()
					return HttpService:PostAsync(tostring(WebhookLink), PostTableData)
				end)

				if not success then
					--The warn is for the sake of helping you figure out the error in the PostAsync request.
					warn("WebhookService Post Attempt failed. " .. err)
				else
					CurrentRequestDebounce = true
					task.delay(5, function()
						CurrentRequestDebounce = false
					end)
				end
			else
				return "Post request limit has been reached, try again in a bit. Embed message: " .. embedTitle
			end
		end
	end
end

return WebhookService
